{"version":3,"sources":["http-common.js","services/user.js","services/questions.js","components/questions-list.js","components/quiz-types.js","components/allusers.js","components/login.js","components/register.js","components/admin-queslist.js","components/header.js","App.js","index.js"],"names":["axios","create","baseURL","headers","data","a","http","post","email","password","token","get","type","score","query","by","id","QuestionsList","props","useState","questions","setQuestions","currentQuestion","setCurrentQuestion","showScore","setShowScore","setScore","answers","queryvalue","URLSearchParams","useLocation","search","useEffect","retrieveQuestions","submitButton","QuestionsDataService","find","then","response","catch","e","console","log","length","className","onClick","filter","x","UsersDataService","submitScore","user","nextQuestion","ShowNext","style","textAlign","role","marginRight","href","questionText","answerOptions","map","answerOption","key","name","defaultChecked","isCorrect","splice","handleAnswerOptionClick","answerText","QuizTypes","types","getTypes","setUser","retrieveTypes","getProfile","getqtypes","quiz_types","GetProfile","user_data","Object","assign","margin","AllUsers","allusers","getallusers","retrieveUsers","GetUsers","scope","entries","test_results","value","Login","alert","useAlert","getAuthentication","getToken","userRole","getRole","useForm","defaultValues","register","handleSubmit","onSubmit","CheckLogin","error","show","LoginForm","maxWidth","aria-describedby","placeholder","required","for","marginLeft","to","RegisterUser","userAuthenticated","CheckRegister","RegisterForm","class","AdminQuestionsList","setShow","ques","getQuestion","getNewValues","values","target","split","handleShow","refreshList","GetQuestionById","questionObject","DeleteQuestionById","deleteQuestionById","question","_id","Modal","Header","Title","Body","rows","defaultValue","onBlur","newques","DeleteNewOption","AddNewOption","Footer","Button","variant","document","querySelector","updateQuestion","React","fontSize","marginTop","data-toggle","data-target","aria-controls","aria-expanded","aria-label","App","path","render","exact","component","options","position","positions","TOP_CENTER","timeout","offset","SUCCESS","transition","transitions","SCALE","ReactDOM","template","AlertTemplate","getElementById"],"mappings":"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","file":"static/js/main.127a1c77.chunk.js","sourcesContent":["import axios from \"axios\"\r\n\r\nexport default axios.create({\r\n  baseURL: \"http://localhost:5000/\",\r\n  headers: {\r\n    \"Content-type\": \"application/json\",\r\n  },\r\n});\r\n","import http from \"../http-common\";\r\n\r\nclass UsersDataService {\r\n  async CheckLogin(data) {\r\n    return await http.post(\"/user/login\", {\r\n      email: data.email,\r\n      password: data.password,\r\n    });\r\n  }\r\n  async CheckRegister(data) {\r\n    return await http.post(\"/user/signup\", {\r\n      email: data.email,\r\n      password: data.password,\r\n    });\r\n  }\r\n  async GetProfile(token) {\r\n    return await http.get(\"/user/auth/profile?access_token=\" + token);\r\n  }\r\n\r\n  async submitScore(type, email, score,token) {\r\n    return await http.post(\"/user/enterscore?access_token=\" + token, {\r\n      type,\r\n      email,\r\n      score,\r\n    });\r\n  }\r\n\r\n  async GetUsers(token) {\r\n    return await http.get(\"/user/getusers?access_token=\" + token);\r\n  }\r\n}\r\n\r\nexport default new UsersDataService();\r\n","import http from \"../http-common\";\r\n\r\nclass QuestionsDataService {\r\n  async get(token) {\r\n    return await http.get(\"/system/?access_token=\"+token);\r\n  }\r\n\r\n  async getqtypes(token) {\r\n    return await http.get(\"/system/choosequiz/?access_token=\"+token);\r\n  }\r\n\r\n  find(query, by,token) {\r\n    return http.get(`/system/?${by}=${query}&access_token=${token}`);\r\n  }\r\n\r\n  async getQuestion(id,token) {\r\n    return await http.post(\"/system/getquestionbyid?access_token=\"+token, {\r\n      id: id,\r\n    });\r\n  }\r\n  async updateQuestion(data,token) {\r\n    return await http.post(\"/system/updatequestion?access_token=\"+token, {\r\n      data: data,\r\n    });\r\n  }\r\n\r\n  async deleteQuestionById(id,token) {\r\n    return await http.post(\"/system/deletequestion?access_token=\"+token, {\r\n      id: id,\r\n    });\r\n  }\r\n}\r\n\r\nexport default new QuestionsDataService();\r\n","import React, { useState, useEffect } from \"react\";\r\nimport UsersDataService from \"../services/user\";\r\nimport QuestionsDataService from \"../services/questions\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst QuestionsList = (props) => {\r\n  const [questions, setQuestions] = useState([]);\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [showScore, setShowScore] = useState(false);\r\n  const [score, setScore] = useState(0);\r\n  const [answers, setAnswers] = useState([]);\r\n\r\n  const queryvalue = new URLSearchParams(useLocation().search);\r\n  const [token, getToken] = useState(queryvalue.get(\"access_token\"));\r\n\r\n\r\n  useEffect(() => {\r\n    retrieveQuestions();\r\n  }, []);\r\n\r\n  const retrieveQuestions = () => {\r\n    QuestionsDataService.find(queryvalue.get(\"type\"), \"type\",token)\r\n      .then((response) => {\r\n        setQuestions(response.data.questions);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const handleAnswerOptionClick = (currentQuestion, isCorrect, key) => {\r\n    if (answers[currentQuestion] == null) {\r\n      answers.splice(currentQuestion, 0, isCorrect);\r\n    } else {\r\n      answers.splice(currentQuestion, 1, isCorrect);\r\n    }\r\n  };\r\n\r\n  const ShowNext = () => {\r\n    const nextQuestion = currentQuestion + 1;\r\n    if (nextQuestion < questions.length) {\r\n      setCurrentQuestion(nextQuestion);\r\n    }\r\n  };\r\n\r\n  const SubmitTest = () => {\r\n    setScore(answers.filter((x) => x == true).length);\r\n    UsersDataService.submitScore(\r\n      queryvalue.get(\"type\"),\r\n      props.user.email,\r\n      answers.filter((x) => x == true).length,\r\n      token\r\n    )\r\n      .then((response) => {\r\n        setShowScore(true);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  let submitButton;\r\n\r\n  if (currentQuestion == questions.length - 1) {\r\n    submitButton = (\r\n      <a className=\"btn btn-primary\" onClick={() => SubmitTest()}>\r\n        Submit\r\n      </a>\r\n    );\r\n  } else {\r\n    submitButton = (\r\n      <a className=\"btn btn-primary\" onClick={() => ShowNext()}>\r\n        Next\r\n      </a>\r\n    );\r\n  }\r\n\r\n  if (questions.length == 0) {\r\n    return <div>Loading</div>;\r\n  } else {\r\n    return (\r\n      <div className=\"app\">\r\n        {showScore ? (\r\n          <div style={{ textAlign: \"center\" }}>\r\n            <div className=\"alert alert-primary text-center\" role=\"alert\">\r\n              You scored {score} out of {questions.length}\r\n            </div>\r\n            <a\r\n              className=\"btn btn-primary\"\r\n              style={{ marginRight: 5 }}\r\n              href=\"javascript:location.reload();\"\r\n            >\r\n              Re Attempt\r\n            </a>\r\n            <a\r\n              className=\"btn btn-primary\"\r\n              href={\"/quiz?access_token=\" + props.token}\r\n            >\r\n              Go Back\r\n            </a>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <div className=\"container\">\r\n              <div className=\"row\">\r\n                <div className=\"col\">\r\n                  <div className=\"card \">\r\n                    <div className=\"card-header\">\r\n                      <span>Question No : {currentQuestion + 1}</span>/\r\n                      {questions.length}\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                      <h5 className=\"card-title\">\r\n                        Domain : {questions[currentQuestion].type}\r\n                      </h5>\r\n                      <p className=\"card-text\">\r\n                        {questions[currentQuestion].questionText}.\r\n                      </p>\r\n                      {questions[currentQuestion].answerOptions.map(\r\n                        (answerOption, key) => (\r\n                          <div className=\"form-check\">\r\n                            <input\r\n                              className=\"form-check-input\"\r\n                              type=\"radio\"\r\n                              name={currentQuestion}\r\n                              key={key}\r\n                              defaultChecked={key === 0}\r\n                              onClick={() =>\r\n                                handleAnswerOptionClick(\r\n                                  currentQuestion,\r\n                                  answerOption.isCorrect,\r\n                                  key\r\n                                )\r\n                              }\r\n                            ></input>\r\n                            <label className=\"form-check-label\">\r\n                              {answerOption.answerText}\r\n                            </label>\r\n                          </div>\r\n                        )\r\n                      )}\r\n                      {submitButton}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default QuestionsList;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport QuestionsDataService from \"../services/questions\";\r\nimport UsersDataService from \"../services/user\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst QuizTypes = (props) => {\r\n  const queryvalue = new URLSearchParams(useLocation().search);\r\n  const [types, getTypes] = useState([]);\r\n  const [token, getToken] = useState(queryvalue.get(\"access_token\"));\r\n  const [user, setUser] = useState({});\r\n\r\n  useEffect(() => {\r\n    retrieveTypes();\r\n    getProfile();\r\n  }, []);\r\n\r\n  const retrieveTypes = () => {\r\n   if(token){ \r\n    QuestionsDataService.getqtypes(token)\r\n      .then((response) => {\r\n        getTypes(response.data.quiz_types);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n    }\r\n  };\r\n\r\n  const getProfile = () => {\r\n    if (token) {\r\n      UsersDataService.GetProfile(token)\r\n        .then((response) => {\r\n          const user_data = Object.assign({}, response.data);\r\n          setUser(user_data);\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n        });\r\n    }\r\n  };\r\n\r\n  if (types.length === 0) {\r\n    return <div>Loading</div>;\r\n  } else {\r\n    return (\r\n      <div className=\"row\">\r\n        <h1>Practice Quizzes</h1>\r\n        {types.map((type, key) => {\r\n          return (\r\n            <div className=\"col-sm-6\" key={key}>\r\n              <div className=\"card\" style={{ margin: 20 }}>\r\n                <div className=\"card-body\">\r\n                  <h5 className=\"card-title\">{type}</h5>\r\n                  <p className=\"card-text\">\r\n                    This is a small quiz and you can re-attempt it to improve\r\n                    your score\r\n                  </p>\r\n                  <a\r\n                    href={`/test?type=${type}&access_token=${token}`}\r\n                    className=\"btn btn-primary\"\r\n                  >\r\n                    Start Quiz\r\n                  </a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n};\r\nexport default QuizTypes;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Switch, Route, Link, Redirect } from \"react-router-dom\";\r\nimport QuestionsDataService from \"../services/questions\";\r\nimport UsersDataService from \"../services/user\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst AllUsers = (props) => {\r\n  const queryvalue = new URLSearchParams(useLocation().search);\r\n  const [token, getToken] = useState(queryvalue.get(\"access_token\"));\r\n  const [allusers, getallusers] = useState(false);\r\n\r\n  useEffect(() => {\r\n    retrieveUsers();\r\n  }, []);\r\n\r\n  const retrieveUsers = () => {\r\n    UsersDataService.GetUsers(token)\r\n      .then((response) => {\r\n        getallusers(response.data);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n  return (\r\n    <div className=\"App\">\r\n      <table className=\"table table-striped\">\r\n        <thead>\r\n          <tr>\r\n            <th scope=\"col\">#</th>\r\n            <th scope=\"col\">Email</th>\r\n            <th scope=\"col\">Test Scores</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {allusers\r\n            ? allusers.map((user, key) => {\r\n                return (\r\n                  <tr>\r\n                    <th scope=\"row\">{key + 1}</th>\r\n                    <td>{user.email}</td>\r\n                    <td>\r\n                      <ul className=\"list-group\">\r\n                        {Object.entries(user.test_results).map(\r\n                          ([key, value]) => {\r\n                            return (\r\n                              <li className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                                {key}\r\n                                <span\r\n                                  className=\"badge badge-primary badge-pill\"\r\n                                >\r\n                                  {value}\r\n                                </span>\r\n                              </li>\r\n                            );\r\n                          }\r\n                        )}\r\n                      </ul>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })\r\n            : \"\"}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AllUsers;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport UsersDataService from \"../services/user\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nfunction Login() {\r\n  const alert = useAlert();\r\n  const [userAuthenticated, getAuthentication] = useState(false);\r\n  const [token, getToken] = useState(false);\r\n  const [userRole, getRole] = useState(null);\r\n  const { register, handleSubmit } = useForm({\r\n    defaultValues: {\r\n      password: \"\",\r\n      email: \"\",\r\n    },\r\n  });\r\n  const onSubmit = (data) => {\r\n    UsersDataService.CheckLogin(data)\r\n      .then((response) => {\r\n        if (response.data.error) {\r\n          alert.show(response.data.error);\r\n        } else if (response.data.token) {\r\n          getRole(response.data.role);\r\n          getAuthentication(response.data);\r\n          getToken(response.data.token);\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const LoginForm = () => (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-sm\"></div>\r\n        <div className=\"col-sm\">\r\n          <div className=\"card bg-light mb-3\" style={{ maxWidth: 500 }}>\r\n            <div className=\"card-header text-center\">Online Quiz</div>\r\n            <div className=\"card-body\">\r\n              <h5 className=\"card-title text-center\">Login</h5>\r\n              <form name=\"contactform\" onSubmit={handleSubmit(onSubmit)}>\r\n                <div className=\"form-group\">\r\n                  <label>Email address</label>\r\n                  <input\r\n                    type=\"email\"\r\n                    className=\"form-control\"\r\n                    name=\"email\"\r\n                    aria-describedby=\"emailHelp\"\r\n                    placeholder=\"Enter email\"\r\n                    {...register(\"email\")}\r\n                    required\r\n                  ></input>\r\n                  <small\r\n                    id=\"emailHelp\"\r\n                    className=\"form-text text-muted\"\r\n                  ></small>\r\n                </div>\r\n                <br></br>\r\n                <div className=\"form-group\">\r\n                  <label for=\"exampleInputPassword1\">Password</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    name=\"password\"\r\n                    placeholder=\"Password\"\r\n                    {...register(\"password\")}\r\n                    required\r\n                  ></input>\r\n                </div>\r\n                <br></br>\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary\"\r\n                  id=\"submit\"\r\n                  value=\"Submit\"\r\n                >\r\n                  Submit\r\n                </button>\r\n                <a\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary\"\r\n                  href=\"/register\"\r\n                  style={{ marginLeft: 10 }}\r\n                >\r\n                  Register here\r\n                </a>\r\n              </form>\r\n              <p className=\"card-text\"></p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-sm\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return token ? (\r\n    userRole == \"Student\" ? (\r\n      <Redirect to={\"/quiz?access_token=\" + token} />\r\n    ) : (\r\n      <Redirect to={\"/admin/questions?access_token=\" + token} />\r\n    )\r\n  ) : (\r\n    <LoginForm></LoginForm>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport UsersDataService from \"../services/user\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nfunction RegisterUser() {\r\n  const alert = useAlert();\r\n  const [userAuthenticated, getAuthentication] = useState(false);\r\n  const { register, handleSubmit } = useForm({\r\n    defaultValues: {\r\n      password: \"\",\r\n      email: \"\",\r\n    },\r\n  });\r\n  const onSubmit = (data) => {\r\n    UsersDataService.CheckRegister(data)\r\n\r\n      .then((response) => {\r\n        if (response.data.error) {\r\n          alert.show(response.data.error);\r\n        } else if (response.data.email) {\r\n          alert.show(\"Success! Login now\");\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const RegisterForm = () => (\r\n    <div class=\"container\">\r\n      <div class=\"row\">\r\n        <div class=\"col-sm\"></div>\r\n        <div class=\"col-sm\">\r\n          <div className=\"card bg-light mb-3\" style={{ maxWidth: 500 }}>\r\n            <div className=\"card-header text-center\">Online Quiz</div>\r\n            <div className=\"card-body\">\r\n              <h5 className=\"card-title text-center\">\r\n                Register as a New Student\r\n              </h5>\r\n              <br></br>\r\n              <form name=\"contactform\" onSubmit={handleSubmit(onSubmit)}>\r\n                {/* <div className=\"form-group\">\r\n                  <label>Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter your username\"\r\n                    {...register(\"name\")}\r\n                  ></input>\r\n                  <small\r\n                    id=\"emailHelp\"\r\n                    className=\"form-text text-muted\"\r\n                  ></small>\r\n                </div> */}\r\n                <br></br>\r\n                <div className=\"form-group\">\r\n                  <label>Email address</label>\r\n                  <input\r\n                    type=\"email\"\r\n                    className=\"form-control\"\r\n                    name=\"email\"\r\n                    aria-describedby=\"emailHelp\"\r\n                    placeholder=\"Enter email\"\r\n                    {...register(\"email\")}\r\n                    required\r\n                  ></input>\r\n                  <small\r\n                    id=\"emailHelp\"\r\n                    className=\"form-text text-muted\"\r\n                  ></small>\r\n                </div>\r\n                <br></br>\r\n                <div className=\"form-group\">\r\n                  <label>Password</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    name=\"password\"\r\n                    placeholder=\"Password\"\r\n                    {...register(\"password\")}\r\n                    required\r\n                  ></input>\r\n                </div>\r\n                <br></br>\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary\"\r\n                  id=\"submit\"\r\n                  value=\"Submit\"\r\n                >\r\n                  Submit\r\n                </button>\r\n                <a\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary\"\r\n                  href=\"/login\"\r\n                  style={{ marginLeft: 10 }}\r\n                >\r\n                  Login Here\r\n                </a>\r\n              </form>\r\n              <p className=\"card-text\"></p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-sm\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return userAuthenticated ? (\r\n    <Redirect to=\"/quiz\" />\r\n  ) : (\r\n    <RegisterForm></RegisterForm>\r\n  );\r\n}\r\n\r\nexport default RegisterUser;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport QuestionsDataService from \"../services/questions\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Modal, Button, Form } from \"react-bootstrap\";\r\nimport { useAlert } from \"react-alert\";\r\n\r\nconst AdminQuestionsList = (props) => {\r\n  const alert = useAlert();\r\n  const queryvalue = new URLSearchParams(useLocation().search);\r\n  const [questions, setQuestions] = useState([]);\r\n  const [show, setShow] = useState(false);\r\n  const [showQuesModel, setQuesModelShow] = useState(false);\r\n  const [ques, getQuestion] = useState(false);\r\n  const [token, getToken] = useState(queryvalue.get(\"access_token\"));\r\n\r\n  // const [ques, getNewData] = useState({});\r\n\r\n  const getNewValues = (e) => {\r\n    let values = e.target.value.split(\",\");\r\n    if (ques.answerOptions[e.target.id] == null) {\r\n      ques.answerOptions.splice(e.target.id, 0, {\r\n        answerText: values[0],\r\n        isCorrect: values[1],\r\n      });\r\n    } else {\r\n      ques.answerOptions.splice(e.target.id, 1, {\r\n        answerText: values[0],\r\n        isCorrect: values[1],\r\n      });\r\n    }\r\n  \r\n  };\r\n\r\n  const editSubmit = () => {\r\n    ques.questionText = document.querySelector(\"#question_updatefield\").value;\r\n    ques.type = document.querySelector(\"#type_updatefield\").value;\r\n    QuestionsDataService.updateQuestion(ques,token)\r\n      .then((response) => {\r\n        refreshList();\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    retrieveQuestions();\r\n    // refreshOptions()\r\n  }, []);\r\n\r\n  const handleShow = () => {\r\n    if (show === false) {\r\n      setShow(true);\r\n    } else {\r\n      setShow(false);\r\n    }\r\n  };\r\n  const handleShowCreateQuestion = () => {\r\n    if (showQuesModel === false) {\r\n      setQuesModelShow(true);\r\n    } else {\r\n      setQuesModelShow(false);\r\n    }\r\n  };\r\n\r\n  const retrieveQuestions = () => {\r\n    if(token){\r\n    QuestionsDataService.get(token)\r\n      .then((response) => {\r\n        setQuestions(response.data.questions);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n    }\r\n  };\r\n\r\n  const refreshList = () => {\r\n    retrieveQuestions();\r\n  };\r\n  // const refreshOptions = () => {\r\n  //   getNewData(ques);\r\n  // };\r\n\r\n  const GetQuestionById = async (id) => {\r\n    QuestionsDataService.getQuestion(id,token)\r\n      .then((response) => {\r\n        getQuestion(response.data.questionObject);\r\n\r\n        if (ques != null) {\r\n          if (show === false) {\r\n            setShow(true);\r\n          } else {\r\n            setShow(false);\r\n          }\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const DeleteQuestionById = async (id) => {\r\n    QuestionsDataService.deleteQuestionById(id,token)\r\n      .then((response) => {\r\n        alert.show(response.data);\r\n        refreshList();\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const AddNewOption = (id) => {\r\n    let newobject = { answerText: \"New option\", isCorrect: false };\r\n    ques.answerOptions.splice(id, 0, newobject);\r\n    const newques = Object.assign({}, ques);\r\n    getQuestion(newques);\r\n\r\n  };\r\n\r\n  const DeleteNewOption = (id) => {\r\n    ques.answerOptions.splice(id, 1);\r\n    const newques = Object.assign({}, ques);\r\n    getQuestion(newques);\r\n  };\r\n\r\n  const AddNewQuestion = (id) => {\r\n    getQuestion({\r\n      questionText: \"Question\",\r\n      type: \"Type\",\r\n      answerOptions: [],\r\n    });\r\n    handleShow();\r\n  };\r\n\r\n  return (\r\n    <div class=\"App\">\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-primary\"\r\n        style={{ margin: 10 }}\r\n        onClick={() => AddNewQuestion()}\r\n      >\r\n        Add New Question\r\n      </button>\r\n      <table className=\"table\">\r\n        <thead className=\"thead-dark\">\r\n          <tr>\r\n            <th scope=\"col\">#</th>\r\n            <th scope=\"col\">Question</th>\r\n            <th scope=\"col\">Type</th>\r\n            <th scope=\"col\"></th>\r\n            <th scope=\"col\"></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {questions.map((question, key) => {\r\n            return (\r\n              <tr>\r\n                <th scope=\"row\">{key + 1}</th>\r\n                <td>\r\n                  <b>Question:</b> {question.questionText}\r\n                  <br></br>\r\n                  <br></br>\r\n                  <b>Options:</b> &nbsp;\r\n                  {question.answerOptions.map((answerOption, key) =>\r\n                    answerOption.isCorrect ? (\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-success\"\r\n                        style={{ margin: 10 }}\r\n                      >\r\n                        {answerOption.answerText}\r\n                      </button>\r\n                    ) : (\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-danger\"\r\n                        style={{ margin: 10 }}\r\n                      >\r\n                        {answerOption.answerText}\r\n                      </button>\r\n                    )\r\n                  )}\r\n                </td>\r\n                <td>{question.type}</td>\r\n                <td>\r\n                  {\" \"}\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary\"\r\n                    style={{ margin: 10 }}\r\n                    onClick={() => GetQuestionById(question._id)}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                </td>\r\n                <td>\r\n                  {\" \"}\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary\"\r\n                    style={{ margin: 10 }}\r\n                    onClick={() => DeleteQuestionById(question._id)}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n      <div className=\"col\">\r\n        <Modal show={show}>\r\n          <Modal.Header>\r\n            <Modal.Title>Edit Question</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <>\r\n              {ques ? (\r\n                <div>\r\n                  <form>\r\n                    <div className=\"form-group\">\r\n                      <div style={{ margin: 10 }}>\r\n                        <label>Question</label>\r\n                      </div>\r\n                      <textarea\r\n                        className=\"form-control\"\r\n                        id=\"question_updatefield\"\r\n                        rows=\"3\"\r\n                        defaultValue={ques ? ques.questionText : \"Loading\"}\r\n                      ></textarea>\r\n                    </div>\r\n                    <br></br>\r\n                    <div className=\"input-group mb-3\">\r\n                      <div className=\"input-group-prepend\">\r\n                        <span\r\n                          className=\"input-group-text\"\r\n                          id=\"inputGroup-sizing-default\"\r\n                        >\r\n                          Type\r\n                        </span>\r\n                      </div>\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"type_updatefield\"\r\n                        defaultValue={ques.type}\r\n                      ></input>\r\n                    </div>\r\n                    <br></br>\r\n                    <div id=\"Optionlist\">\r\n                      {ques.answerOptions.map((answerOption, key) => (\r\n                        <div className=\"input-group\" id={key}>\r\n                          <div className=\"input-group-prepend\">\r\n                            <span className=\"input-group-text\" id=\"\">\r\n                              Answer {key + 1} | Is Correct?\r\n                            </span>\r\n                          </div>\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            name=\"\"\r\n                            defaultValue={\r\n                              answerOption.answerText +\r\n                              \",\" +\r\n                              answerOption.isCorrect\r\n                            }\r\n                            id={key}\r\n                            onBlur={getNewValues}\r\n                          ></input>\r\n                          <div className=\"input-group-append\">\r\n                            <button\r\n                              className=\"btn btn-outline-secondary\"\r\n                              type=\"button\"\r\n                              id={key}\r\n                              onClick={() => DeleteNewOption(key)}\r\n                            >\r\n                              x\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  </form>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary\"\r\n                    style={{ margin: 10 }}\r\n                    onClick={() => AddNewOption(ques.answerOptions.length)}\r\n                  >\r\n                    + Option\r\n                  </button>\r\n                </div>\r\n              ) : (\r\n                \"Loading...\"\r\n              )}\r\n            </>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={editSubmit}>\r\n              Save\r\n            </Button>\r\n            <Button variant=\"secondary\" onClick={handleShow}>\r\n              Close Modal\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminQuestionsList;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useAlert } from \"react-alert\";\r\nimport UsersDataService from \"../services/user\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n  const queryvalue = new URLSearchParams(useLocation().search);\r\n  const [user, setUser] = React.useState(false);\r\n  const [token, getToken] = useState(queryvalue.get(\"access_token\"));\r\n\r\n  useEffect(() => {\r\n    getProfile();\r\n  }, []);\r\n\r\n  const getProfile = () => {\r\n    if (token) {\r\n      UsersDataService.GetProfile(token)\r\n        .then((response) => {\r\n          const user_data = Object.assign({}, response.data.user);\r\n          setUser(user_data);\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n      <a className=\"navbar-brand\" href=\"#\">\r\n        <div\r\n          className=\"alert alert-primary\"\r\n          role=\"alert\"\r\n          style={{ fontSize: 15, marginLeft: 10, marginTop: 10 }}\r\n        >\r\n          {user ? \"Hello \" + user.email : \"Loading...\"}\r\n        </div>\r\n      </a>\r\n      <button\r\n        className=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#navbarNav\"\r\n        aria-controls=\"navbarNav\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n        <ul className=\"navbar-nav\">\r\n          {user.role == \"Student\" ? (\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href={\"/quiz?access_token=\" + token}>\r\n                Quiz\r\n              </a>\r\n            </li>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {user.role == \"Admin\" ? (\r\n            <>\r\n              <li className=\"nav-item\">\r\n                <a\r\n                  className=\"nav-link\"\r\n                  href={\"/admin/questions?access_token=\" + token}\r\n                >\r\n                  Manage Questions\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a\r\n                  className=\"nav-link\"\r\n                  href={\"/admin/testusers?access_token=\" + token}\r\n                >\r\n                  Users\r\n                </a>\r\n              </li>\r\n            </>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"/login\">\r\n              Logout\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState, useEffect } from \"react\";\nimport { Switch, Route, Link, Redirect } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport QuestionsList from \"./components/questions-list\";\nimport QuizTypes from \"./components/quiz-types\";\nimport AllUsers from \"./components/allusers\";\nimport Login from \"./components/login\";\nimport RegisterUser from \"./components/register\";\nimport AdminQuestionsList from \"./components/admin-queslist\";\nimport Header from \"./components/header\";\nimport { useAlert } from \"react-alert\";\nimport UsersDataService from \"./services/user\";\nimport { useLocation } from \"react-router-dom\";\n\nfunction App() {\n  const alert = useAlert();\n  const queryvalue = new URLSearchParams(useLocation().search);\n  const [user, setUser] = React.useState(false);\n  const [token, getToken] = useState(queryvalue.get(\"access_token\"));\n\n  useEffect(() => {\n    getProfile();\n  }, []);\n\n  const getProfile = () => {\n    if (token) {\n      UsersDataService.GetProfile(token)\n        .then((response) => {\n          const user_data = Object.assign({}, response.data.user);\n          setUser(user_data);\n        })\n        .catch((e) => {\n          console.log(e);\n        });\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <Route\n        path={[\"/admin/questions\", \"/quiz\", \"/test\", \"/admin/testusers\"]}\n        render={(props) => <Header user={user} token={token} {...props} />}\n      />\n\n      <div className=\"container mt-3\">\n        <Switch>\n          <Route\n            exact\n            path={[\"/\"]}\n            render={() =>\n              user ? (\n                user.role == \"Student\" ? (\n                  <Redirect to={\"/quiz?access_token=\" + token} />\n                ) : (\n                  <Redirect to={\"/admin/questions?access_token=\" + token} />\n                )\n              ) : (\n                <Redirect to=\"/login\" />\n              )\n            }\n          />\n          <Route exact path={[\"/login\"]} component={Login} />\n          <Route exact path={[\"/admin/testusers\"]} component={AllUsers} />\n          <Route exact path={[\"/register\"]} component={RegisterUser} />\n          <Route exact path={[\"/quiz\"]} component={QuizTypes} />\n          <Route\n            exact\n            path={[\"/test\"]}\n            render={(props) => (\n              <QuestionsList user={user} token={token} {...props} />\n            )}\n          />\n          <Route\n            exact\n            path={[\"/admin/questions\"]}\n            component={AdminQuestionsList}\n          />\n        </Switch>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport Header from \"./components/header\";\nimport reportWebVitals from './reportWebVitals';\nimport { transitions, positions,types, Provider as AlertProvider } from \"react-alert\";\nimport AlertTemplate from \"react-alert-template-basic\";\nimport {BrowserRouter} from \"react-router-dom\"\n\n// optional configuration\nconst options = {\n  // you can also just use 'bottom center'\n  position: positions.TOP_CENTER,\n  timeout: 5000,\n  offset: \"100px\",\n  type: types.SUCCESS,\n  // you can also just use 'scale'\n  transition: transitions.SCALE,\n};\n\nReactDOM.render(\n  <BrowserRouter>\n   <AlertProvider template={AlertTemplate} {...options}>\n      <App />\n      </AlertProvider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n"],"sourceRoot":""}