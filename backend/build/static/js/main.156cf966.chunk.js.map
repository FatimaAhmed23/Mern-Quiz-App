{"version":3,"sources":["http-common.js","services/questions.js","components/questions-list.js","services/user.js","components/quiz-types.js","components/add-user.js","components/login.js","components/register.js","components/admin-queslist.js","App.js","index.js"],"names":["axios","create","baseURL","headers","a","http","get","query","by","id","post","data","QuestionsList","props","useState","questions","setQuestions","currentQuestion","setCurrentQuestion","showScore","setShowScore","score","setScore","answers","queryvalue","URLSearchParams","useLocation","search","useEffect","retrieveQuestions","submitButton","QuestionsDataService","find","then","response","catch","e","console","log","length","className","onClick","filter","x","nextQuestion","ShowNext","role","type","questionText","answerOptions","map","answerOption","key","name","defaultChecked","isCorrect","splice","handleAnswerOptionClick","answerText","email","password","token","QuizTypes","types","getTypes","setUser","retrieveTypes","getProfile","getqtypes","quiz_types","UsersDataService","GetProfile","user_data","Object","assign","style","margin","href","AddUser","Login","alert","useAlert","getAuthentication","getToken","useForm","defaultValues","register","handleSubmit","onSubmit","CheckLogin","error","show","LoginForm","class","maxWidth","for","aria-describedby","placeholder","required","value","to","RegisterUser","userAuthenticated","CheckRegister","user","RegisterForm","AdminQuestionsList","setShow","ques","getQuestion","getNewValues","values","target","split","handleShow","refreshList","GetQuestionById","questionObject","DeleteQuestionById","deleteQuestionById","scope","question","_id","Modal","Header","Title","Body","rows","defaultValue","onBlur","newques","DeleteNewOption","AddNewOption","Footer","Button","variant","document","querySelector","updateQuestion","App","React","exact","path","component","options","position","positions","TOP_CENTER","timeout","offset","SUCCESS","transition","transitions","SCALE","ReactDOM","render","template","AlertTemplate","getElementById"],"mappings":"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","file":"static/js/main.156cf966.chunk.js","sourcesContent":["import axios from \"axios\"\r\n\r\nexport default axios.create({\r\n  baseURL: \"http://localhost:5000/\",\r\n  headers: {\r\n    \"Content-type\": \"application/json\",\r\n  },\r\n});\r\n","import http from \"../http-common\"\r\n\r\n\r\nclass QuestionsDataService {\r\n  async get() {\r\n    return await http.get(\"/system/\");\r\n  }\r\n\r\n  async getqtypes() {\r\n    return await http.get(\"/system/choosequiz\");\r\n  }\r\n\r\n  find(query, by) {\r\n    return http.get(`?${by}=${query}`);\r\n  }\r\n\r\n  async getQuestion(id) {\r\n    return await http.post(\"/system/getquestionbyid\", {\r\n      id: id,\r\n    });\r\n  }\r\n  async updateQuestion(data) {\r\n    return await http.post(\"/system/updatequestion\", {\r\n      data: data,\r\n    });\r\n  }\r\n\r\n  async deleteQuestionById(id){\r\n       return await http.post(\"/system/deletequestion\", {\r\n         id: id,\r\n      });\r\n  }\r\n}\r\n\r\nexport default new QuestionsDataService();"," import React, { useState, useEffect} from \"react\";\r\n import QuestionsDataService from \"../services/questions\"\r\n import {useLocation } from \"react-router-dom\";\r\n\r\nconst QuestionsList = props => {\r\n  \r\n  const [questions, setQuestions] = useState([])\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [showScore, setShowScore] = useState(false);\r\n  const [score, setScore] = useState(0);\r\n  const [answers, setAnswers] = useState([])\r\n  // const [answerhistory, setHistory] = useState([]);\r\n \r\n  const queryvalue= new URLSearchParams(useLocation().search);\r\n  useEffect(() => {\r\n  retrieveQuestions();\r\n  }, [])\r\n\r\n  const retrieveQuestions = () => {\r\n    QuestionsDataService.find(queryvalue.get(\"type\"), \"type\")\r\n      .then((response) => {\r\n        setQuestions(response.data.questions);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const handleAnswerOptionClick = (currentQuestion,isCorrect,key) => {\r\n    // const newresponse = [...answers, isCorrect];\r\n    if (answers[currentQuestion] == null){answers.splice(currentQuestion, 0, isCorrect)}\r\n    else{answers.splice(currentQuestion, 1, isCorrect);}\r\n\r\n  };\r\n  // const handleAnswerChange = (currentQuestion,key) => {\r\n  //   if (answerhistory[currentQuestion] == null) {\r\n  //     answerhistory.splice(currentQuestion, 0, key);\r\n  //   } else {\r\n  //     answerhistory.splice(currentQuestion, 1, key);\r\n  //   }\r\n  //   console.log(answerhistory);\r\n  // };\r\n\r\n  const ShowNext = () => {\r\n    const nextQuestion = currentQuestion + 1;\r\n    if (nextQuestion < questions.length) {\r\n      setCurrentQuestion(nextQuestion);\r\n    } \r\n  }\r\n\r\n  //  const ShowPrevious = () => {\r\n  //    const PreviousQuestion = currentQuestion - 1;\r\n  //    if (PreviousQuestion >= 0) {\r\n  //      setCurrentQuestion(PreviousQuestion);\r\n  //    } \r\n  //  };\r\n\r\n   const SubmitTest = () =>{\r\n      setScore(answers.filter((x) => x == true).length);\r\n      setShowScore(true);\r\n   }\r\n \r\n   let prevButton; \r\n   let submitButton;\r\n  //  if (currentQuestion > 0) {\r\n  //     prevButton = (\r\n  //      <a className=\"btn btn-primary\" onClick={() => ShowPrevious()}>\r\n  //        Previous\r\n  //      </a>\r\n  //    );\r\n  //  } else {\r\n  //     prevButton = \"\";\r\n  //  }\r\n\r\n   if (currentQuestion == (questions.length - 1)) {\r\n      submitButton = (\r\n        <a className=\"btn btn-primary\" onClick={() => SubmitTest()}>\r\n          Submit\r\n        </a>\r\n      );;\r\n   }else {\r\n     submitButton = (\r\n       <a className=\"btn btn-primary\" onClick={() => ShowNext()}>\r\n         Next\r\n       </a>\r\n     );\r\n   }\r\n\r\n    if (questions.length == 0) {\r\n      return <div>Loading</div>;\r\n    } else {\r\n      return (\r\n        <div className=\"app\">\r\n          {showScore ? (\r\n            <div className=\"alert alert-primary text-center\" role=\"alert\">\r\n              You scored {score} out of {questions.length}\r\n            </div>\r\n          ) : (\r\n            <>\r\n              <div className=\"container\">\r\n                <div className=\"row\">\r\n                  <div className=\"col\">\r\n                    <div className=\"card \">\r\n                      <div className=\"card-header\">\r\n                        <span>Question No : {currentQuestion + 1}</span>/\r\n                        {questions.length}\r\n                      </div>\r\n                      <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">\r\n                          Domain : {questions[currentQuestion].type}\r\n                        </h5>\r\n                        <p className=\"card-text\">\r\n                          {questions[currentQuestion].questionText}.\r\n                        </p>\r\n                        {questions[currentQuestion].answerOptions.map(\r\n                          (answerOption, key) => (\r\n                            <div className=\"form-check\">\r\n                              <input\r\n                                className=\"form-check-input\"\r\n                                type=\"radio\"\r\n                                name={currentQuestion}\r\n                                key={key}\r\n                                defaultChecked={key === 0}\r\n                                // {...setHistory}\r\n                                onClick={() =>\r\n                                  handleAnswerOptionClick(\r\n                                    currentQuestion,\r\n                                    answerOption.isCorrect,\r\n                                    key\r\n                                  )\r\n                                }\r\n                                // onChange={() =>\r\n                                //   handleAnswerChange(\r\n                                //     currentQuestion,\r\n                                //     key\r\n                                //   )\r\n                                // }\r\n                              ></input>\r\n                              <label\r\n                                className=\"form-check-label\"\r\n                              >\r\n                                {answerOption.answerText}\r\n                              </label>\r\n                            </div>\r\n                          )\r\n                        )}\r\n                        {/* {prevButton} */}\r\n                        {submitButton}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      );\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default QuestionsList;","import http from \"../http-common\";\r\n\r\nclass UsersDataService {\r\n  async CheckLogin(data) {\r\n    return await http.post(\"/user/login\", {\r\n      email: data.email,\r\n      password: data.password,\r\n    });\r\n  }\r\n  async CheckRegister(data) {\r\n    return await http.post(\"/user/signup\", {\r\n      email: data.email,\r\n      password: data.password,\r\n    });\r\n  }\r\n  async GetProfile(token) {\r\n    return await http.get(\"/user/auth/profile?access_token=\" + token);\r\n  }\r\n}\r\n\r\nexport default new UsersDataService();\r\n","import React, { useState, useEffect } from \"react\";\r\nimport QuestionsDataService from \"../services/questions\";\r\nimport UsersDataService from \"../services/user\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\n\r\n\r\nconst QuizTypes = props => {\r\n  const queryvalue = new URLSearchParams(useLocation().search);\r\n  const [types, getTypes] = useState([]);\r\n  const [token, getToken] = useState(queryvalue.get(\"access_token\"));\r\n\r\n\r\n \r\n   const [user, setUser] = useState({});\r\n\r\n    useEffect(() => {\r\n    retrieveTypes();\r\n    getProfile();\r\n\r\n    }, [])\r\n\r\n    const retrieveTypes = () => {\r\n      QuestionsDataService.getqtypes()\r\n        .then((response) => {\r\n          getTypes(response.data.quiz_types);\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n        });\r\n    };\r\n\r\n    const getProfile = () => {\r\n       if (token) {\r\n         UsersDataService.GetProfile(token)\r\n           .then((response) => {\r\n             const user_data = Object.assign({}, response.data);\r\n             setUser(user_data);\r\n             console.log(user_data);\r\n           })\r\n           .catch((e) => {\r\n             console.log(e);\r\n           });\r\n       }\r\n     };\r\n\r\n \r\n  if (types.length === 0) {\r\n    return <div>Loading</div>;\r\n  } else {\r\n    return (\r\n      <div className=\"row\">\r\n        {types.map((type, key) => {\r\n          return (\r\n            <div className=\"col-sm-6\" key={key}>\r\n              <div className=\"card\" style={{ margin: 20 }}>\r\n                <div className=\"card-body\">\r\n                  <h5 className=\"card-title\">{type}</h5>\r\n                  <p className=\"card-text\">\r\n                    With supporting text below as a natural lead-in to\r\n                    additional content.\r\n                  </p>\r\n                  <a href={`/?type=${type}`} className=\"btn btn-primary\">\r\n                    Start Quiz\r\n                  </a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default QuizTypes;\r\n","import React from \"react\";\r\n\r\nfunction AddUser() {\r\n  return <div className=\"App\">adduser</div>;\r\n}\r\n\r\nexport default AddUser;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport UsersDataService from \"../services/user\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\n\r\nfunction Login() {\r\n  const alert = useAlert();\r\n  const [userAuthenticated , getAuthentication] = useState(false)\r\n  const [token,getToken] = useState (false)\r\n  const { register, handleSubmit } = useForm({\r\n    defaultValues: {\r\n      password: \"\",\r\n      email: \"\",\r\n    },\r\n  });\r\n  const onSubmit = (data) => {\r\n    UsersDataService.CheckLogin(data)\r\n      .then((response) => {\r\n        if(response.data.error){\r\n         alert.show(response.data.error);\r\n        }else if (response.data.token) {\r\n           console.log(response.data);\r\n           getAuthentication(true);\r\n           getToken(response.data.token);\r\n          //  return <Redirect to={\"/quiz?\" + response.data.token} />;\r\n        }\r\n        // setQuestions(response.data.questions);\r\n      })\r\n      .catch((e) => {\r\n        // console.log(e);\r\n      });\r\n  }\r\n\r\n  const LoginForm = () => (\r\n    <div class=\"container\">\r\n      <div class=\"row\">\r\n        <div class=\"col-sm\"></div>\r\n        <div class=\"col-sm\">\r\n          <div className=\"card bg-light mb-3\" style={{ maxWidth: 500 }}>\r\n            <div className=\"card-header text-center\">Online Quiz</div>\r\n            <div className=\"card-body\">\r\n              <h5 className=\"card-title text-center\">Login</h5>\r\n              <form name=\"contactform\" onSubmit={handleSubmit(onSubmit)}>\r\n                <div className=\"form-group\">\r\n                  <label for=\"exampleInputEmail1\">Email address</label>\r\n                  <input\r\n                    type=\"email\"\r\n                    className=\"form-control\"\r\n                    name=\"email\"\r\n                    aria-describedby=\"emailHelp\"\r\n                    placeholder=\"Enter email\"\r\n                    {...register(\"email\")}\r\n                    required\r\n                  ></input>\r\n                  <small\r\n                    id=\"emailHelp\"\r\n                    className=\"form-text text-muted\"\r\n                  ></small>\r\n                </div>\r\n                <br></br>\r\n                <div className=\"form-group\">\r\n                  <label for=\"exampleInputPassword1\">Password</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    name=\"password\"\r\n                    placeholder=\"Password\"\r\n                    {...register(\"password\")}\r\n                    required\r\n                  ></input>\r\n                </div>\r\n                <br></br>\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary\"\r\n                  id=\"submit\"\r\n                  value=\"Submit\"\r\n                >\r\n                  Submit\r\n                </button>\r\n              </form>\r\n              <p className=\"card-text\"></p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-sm\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return token ? <Redirect to={\"/quiz?access_token=\" + token} /> : <LoginForm></LoginForm>;\r\n  \r\n}\r\n\r\nexport default Login;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport UsersDataService from \"../services/user\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nfunction RegisterUser() {\r\n  const alert = useAlert();\r\n  const [userAuthenticated, getAuthentication] = useState(false);\r\n  const { register, handleSubmit } = useForm({\r\n    defaultValues: {\r\n      password: \"\",\r\n      email: \"\",\r\n    },\r\n  });\r\n  const onSubmit = (data) => {\r\n    UsersDataService.CheckRegister(data)\r\n\r\n      .then((response) => {\r\n          console.log(response.data.user);\r\n        if (response.data.error) {\r\n          alert.show(response.data.error);\r\n        } else if (response.data.user) {\r\n        //   getAuthentication(true);\r\n        //   return <Redirect to=\"/quiz\" />;\r\n        console.log(\"registered\")\r\n        }\r\n        // setQuestions(response.data.questions);\r\n      })\r\n      .catch((e) => {\r\n        // console.log(e);\r\n      });\r\n  };\r\n\r\n  const RegisterForm = () => (\r\n    <div class=\"container\">\r\n      <div class=\"row\">\r\n        <div class=\"col-sm\"></div>\r\n        <div class=\"col-sm\">\r\n          <div className=\"card bg-light mb-3\" style={{ maxWidth: 500 }}>\r\n            <div className=\"card-header text-center\">Online Quiz</div>\r\n            <div className=\"card-body\">\r\n              <h5 className=\"card-title text-center\">\r\n                Register as a New Student\r\n              </h5>\r\n              <br></br>\r\n              <form name=\"contactform\" onSubmit={handleSubmit(onSubmit)}>\r\n                {/* <div className=\"form-group\">\r\n                  <label>Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter your username\"\r\n                    {...register(\"name\")}\r\n                  ></input>\r\n                  <small\r\n                    id=\"emailHelp\"\r\n                    className=\"form-text text-muted\"\r\n                  ></small>\r\n                </div> */}\r\n                <br></br>\r\n                <div className=\"form-group\">\r\n                  <label>Email address</label>\r\n                  <input\r\n                    type=\"email\"\r\n                    className=\"form-control\"\r\n                    name=\"email\"\r\n                    aria-describedby=\"emailHelp\"\r\n                    placeholder=\"Enter email\"\r\n                    {...register(\"email\")}\r\n                    required\r\n                  ></input>\r\n                  <small\r\n                    id=\"emailHelp\"\r\n                    className=\"form-text text-muted\"\r\n                  ></small>\r\n                </div>\r\n                <br></br>\r\n                <div className=\"form-group\">\r\n                  <label>Password</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    name=\"password\"\r\n                    placeholder=\"Password\"\r\n                    {...register(\"password\")}\r\n                    required\r\n                  ></input>\r\n                </div>\r\n                <br></br>\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary\"\r\n                  id=\"submit\"\r\n                  value=\"Submit\"\r\n                >\r\n                  Submit\r\n                </button>\r\n              </form>\r\n              <p className=\"card-text\"></p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-sm\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return userAuthenticated ? (\r\n    <Redirect to=\"/quiz\" />\r\n  ) : (\r\n    <RegisterForm></RegisterForm>\r\n  );\r\n}\r\n\r\nexport default RegisterUser;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport QuestionsDataService from \"../services/questions\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { Link }  from \"react-router-dom\"\r\nimport { Modal, Button, Form } from \"react-bootstrap\";\r\nimport { useAlert } from \"react-alert\";\r\n\r\nconst AdminQuestionsList = props => {\r\n  const alert = useAlert();\r\n  const [questions, setQuestions] = useState([])\r\n  const [show, setShow] = useState(false)\r\n  const [showQuesModel, setQuesModelShow] = useState(false);\r\n  const [ques,getQuestion] = useState(false)\r\n  \r\n  // const [ques, getNewData] = useState({});\r\n  \r\n\r\n  const getNewValues = (e) => {\r\n    let values = e.target.value.split(\",\");\r\n    if (ques.answerOptions[e.target.id] == null) {\r\n      ques.answerOptions.splice(e.target.id, 0, {\r\n        answerText: values[0],\r\n        isCorrect: values[1],\r\n      });\r\n    } else {\r\n      ques.answerOptions.splice(e.target.id, 1, {\r\n        answerText: values[0],\r\n        isCorrect: values[1],\r\n      });\r\n    }\r\n    console.log(ques);\r\n  }\r\n\r\n  const editSubmit = () =>{\r\n    \r\n      ques.questionText = document.querySelector(\"#question_updatefield\").value\r\n      ques.type = document.querySelector(\"#type_updatefield\").value;\r\n       QuestionsDataService.updateQuestion(ques)\r\n         .then((response) => {\r\n           console.log(response);\r\n           refreshList();\r\n           \r\n         })\r\n         .catch((e) => {\r\n           console.log(e);\r\n         });;\r\n  \r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n  retrieveQuestions();\r\n  // refreshOptions()\r\n  }, [])\r\n  \r\n  \r\n  const handleShow = () => {if (show === false){ setShow(true)}else{setShow(false)\r\n   } \r\n };\r\n const handleShowCreateQuestion = () => {\r\n   if (showQuesModel === false) {\r\n     setQuesModelShow(true);\r\n   } else {\r\n     setQuesModelShow(false);\r\n   }\r\n };\r\n\r\n\r\n  const retrieveQuestions = () => {\r\n    QuestionsDataService.get()\r\n      .then((response) => {\r\n        setQuestions(response.data.questions);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const refreshList = () => {\r\n    retrieveQuestions();\r\n  };\r\n  // const refreshOptions = () => {\r\n  //   getNewData(ques);\r\n  // };\r\n\r\n\r\n  const GetQuestionById = async (id) => {\r\n    QuestionsDataService.getQuestion(id)\r\n      .then((response) => {\r\n       getQuestion(response.data.questionObject);\r\n  \r\n       if(ques != null){\r\n         if (show === false) {\r\n           setShow(true);\r\n         } else {\r\n           setShow(false);\r\n         }\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n\r\n   \r\n \r\n  };\r\n\r\n  const DeleteQuestionById = async (id) => {\r\n      QuestionsDataService.deleteQuestionById(id)\r\n        .then((response) => {\r\n          alert.show(response.data);\r\n          refreshList();\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n        });\r\n\r\n  };\r\n\r\n  const AddNewOption = (id) =>{\r\n     let newobject =  { answerText: \"New option\",\r\n       isCorrect: false,\r\n     }\r\n    //  console.log(ques);\r\n    ques.answerOptions.splice(id, 0, newobject);\r\n    const newques = Object.assign({}, ques);\r\n    getQuestion(newques);\r\n    \r\n    // document.querySelector(\"#Optionlist\").append('<div>saasfsaf</div>')\r\n  \r\n}\r\n\r\n const DeleteNewOption = (id) =>{\r\n  ques.answerOptions.splice(id,1)\r\n  const newques = Object.assign({}, ques);\r\n  getQuestion(newques);\r\n}\r\n\r\nconst AddNewQuestion = (id) =>{ \r\n getQuestion({\r\n    questionText: \"Question\",\r\n    type: \"Type\",\r\n    answerOptions : [],\r\n  });\r\nhandleShow()\r\n}\r\n\r\n\r\n   return (\r\n     <div className=\"App\">\r\n       <button\r\n         type=\"button\"\r\n         className=\"btn btn-primary\"\r\n         style={{ margin: 10 }}\r\n         onClick={() => AddNewQuestion()}\r\n       >\r\n         Add New Question\r\n       </button>\r\n       <table className=\"table table-striped\">\r\n         <thead className=\"thead-dark\">\r\n           <tr>\r\n             <th scope=\"col\">#</th>\r\n             <th scope=\"col\">Question</th>\r\n             <th scope=\"col\">Type</th>\r\n             <th scope=\"col\">Edit</th>\r\n             <th scope=\"col\">Delete</th>\r\n           </tr>\r\n         </thead>\r\n         <tbody>\r\n           {questions.map((question, key) => {\r\n             return (\r\n               <tr>\r\n                 <th scope=\"row\">{key + 1}</th>\r\n                 <td>\r\n                   <b>Question:</b> {question.questionText}\r\n                   <br></br>\r\n                   <br></br>\r\n                   <b>Options:</b> &nbsp;\r\n                   {question.answerOptions.map((answerOption, key) =>\r\n                     answerOption.isCorrect ? (\r\n                       <button\r\n                         type=\"button\"\r\n                         className=\"btn btn-success\"\r\n                         style={{ margin: 10 }}\r\n                       >\r\n                         {answerOption.answerText}\r\n                       </button>\r\n                     ) : (\r\n                       <button\r\n                         type=\"button\"\r\n                         className=\"btn btn-danger\"\r\n                         style={{ margin: 10 }}\r\n                       >\r\n                         {answerOption.answerText}\r\n                       </button>\r\n                     )\r\n                   )}\r\n                 </td>\r\n                 <td>{question.type}</td>\r\n                 <td>\r\n                   {\" \"}\r\n                   <button\r\n                     type=\"button\"\r\n                     className=\"btn btn-primary\"\r\n                     style={{ margin: 10 }}\r\n                     onClick={() => GetQuestionById(question._id)}\r\n                   >\r\n                     Edit\r\n                   </button>\r\n                 </td>\r\n                 <td>\r\n                   {\" \"}\r\n                   <button\r\n                     type=\"button\"\r\n                     className=\"btn btn-primary\"\r\n                     style={{ margin: 10 }}\r\n                     onClick={() => DeleteQuestionById(question._id)}\r\n                   >\r\n                     Delete\r\n                   </button>\r\n                 </td>\r\n               </tr>\r\n             );\r\n           })}\r\n         </tbody>\r\n       </table>\r\n       <div className=\"col\">\r\n         <Modal show={show}>\r\n           <Modal.Header>\r\n             <Modal.Title>Edit Question</Modal.Title>\r\n           </Modal.Header>\r\n           <Modal.Body>\r\n             <>\r\n               {ques ? (\r\n                 <div>\r\n                   <form>\r\n                     <div className=\"form-group\">\r\n                       <div style={{ margin: 10 }}>\r\n                         <label>Question</label>\r\n                       </div>\r\n                       <textarea\r\n                         className=\"form-control\"\r\n                         id=\"question_updatefield\"\r\n                         rows=\"3\"\r\n                         defaultValue={ques ? ques.questionText : \"Loading\"}\r\n                       ></textarea>\r\n                     </div>\r\n                     <br></br>\r\n                     <div className=\"input-group mb-3\">\r\n                       <div className=\"input-group-prepend\">\r\n                         <span\r\n                           className=\"input-group-text\"\r\n                           id=\"inputGroup-sizing-default\"\r\n                         >\r\n                           Type\r\n                         </span>\r\n                       </div>\r\n                       <input\r\n                         type=\"text\"\r\n                         className=\"form-control\"\r\n                         id=\"type_updatefield\"\r\n                         defaultValue={ques.type}\r\n                       ></input>\r\n                     </div>\r\n                     <br></br>\r\n                     <div id=\"Optionlist\">\r\n                       {ques.answerOptions.map((answerOption, key) => (\r\n                         <div className=\"input-group\" id={key}>\r\n                           <div className=\"input-group-prepend\">\r\n                             <span className=\"input-group-text\" id=\"\">\r\n                               Answer {key + 1} | Is Correct?\r\n                             </span>\r\n                           </div>\r\n                           <input\r\n                             type=\"text\"\r\n                             className=\"form-control\"\r\n                             name=\"\"\r\n                             defaultValue={\r\n                               answerOption.answerText +\r\n                               \",\" +\r\n                               answerOption.isCorrect\r\n                             }\r\n                             id={key}\r\n                             onBlur={getNewValues}\r\n                           ></input>\r\n                           <div className=\"input-group-append\">\r\n                             <button\r\n                               className=\"btn btn-outline-secondary\"\r\n                               type=\"button\"\r\n                               id={key}\r\n                               onClick={() => DeleteNewOption(key)}\r\n                             >\r\n                               x\r\n                             </button>\r\n                           </div>\r\n                         </div>\r\n                       ))}\r\n                     </div>\r\n                   </form>\r\n                   <button\r\n                     type=\"button\"\r\n                     className=\"btn btn-primary\"\r\n                     style={{ margin: 10 }}\r\n                     onClick={() => AddNewOption(ques.answerOptions.length)}\r\n                   >\r\n                     + Option\r\n                   </button>\r\n                 </div>\r\n               ) : (\r\n                 \"Loading...\"\r\n               )}\r\n             </>\r\n           </Modal.Body>\r\n           <Modal.Footer>\r\n             <Button variant=\"secondary\" onClick={editSubmit}>\r\n               Save\r\n             </Button>\r\n             <Button variant=\"secondary\" onClick={handleShow}>\r\n               Close Modal\r\n             </Button>\r\n           </Modal.Footer>\r\n         </Modal>\r\n       </div>\r\n     </div>\r\n   );  \r\n  \r\n}\r\n\r\nexport default AdminQuestionsList;\r\n","import React, { useState, useEffect } from \"react\";\nimport {Switch,Route,Link} from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport QuestionsList from \"./components/questions-list\"\nimport QuizTypes from \"./components/quiz-types\";\nimport AddUser from \"./components/add-user\";\nimport Login from \"./components/login\";\nimport RegisterUser from \"./components/register\";\nimport AdminQuestionsList from \"./components/admin-queslist\";\nimport Header from \"./components/header\";\nimport Quiz from \"./components/quiz\";\nimport { useAlert } from \"react-alert\";\nimport UsersDataService from \"./services/user\";\nimport { useLocation } from \"react-router-dom\";\n\nfunction App() {\n   const alert = useAlert();\n   const queryvalue = new URLSearchParams(useLocation().search);\n  const [user,setUser] = React.useState({})\n  const [token, getToken] = useState(queryvalue.get(\"access_token\"));\n  \n  useEffect(() => {\n    getProfile();\n  }, []);\n  async function login(user = null){\n    setUser(user)\n  }\n  async function logout(){\n    setUser(null)\n  }\n\n  const getProfile = () => {\n    if (token) {\n      UsersDataService.GetProfile(token)\n        .then((response) => {\n          const user_data = Object.assign({}, response.data.user);\n          setUser(user_data);\n          console.log(user_data);\n        })\n        .catch((e) => {\n          console.log(e);\n        });\n    }\n  };\n  return (\n    <div className=\"App\">\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n        <a className=\"navbar-brand\" href=\"#\">\n          Hello {user.email}\n        </a>\n        <ul className=\"nav\">\n          {user ? (\n            user.role == \"Student\" ? (\n              <li className=\"nav-item\">\n                <a className=\"nav-link\" href={\"/quiz?access_token=\" +token}>\n                  Quiz\n                </a>\n              </li>\n            ) : (\n              <li className=\"nav-item\">\n                <a className=\"nav-link active\" href={\"/admin/questions?access_token=\" +token}>\n                  Admin Question List\n                </a>\n              </li>\n            )\n          ) : (\n            <div>\n              <li className=\"nav-item\">\n                <a className=\"nav-link\" href=\"/login\">\n                  Login\n                </a>\n              </li>\n              <li className=\"nav-item\">\n                <a className=\"nav-link\" href=\"/register\">\n                  Register\n                </a>\n              </li>\n            </div>\n          )}\n        </ul>\n      </nav>\n\n      <div className=\"container mt-3\">\n        <Switch>\n          <Route exact path={[\"/\"]} component={QuestionsList} />\n          <Route exact path={[\"/login\"]} component={Login} />\n          <Route exact path={[\"/adduser\"]} component={AddUser} />\n          <Route exact path={[\"/quiz\"]} component={QuizTypes} />\n          <Route exact path={[\"/register\"]} component={RegisterUser} />\n          <Route\n            exact\n            path={[\"/admin/questions\"]}\n            component={AdminQuestionsList}\n          />\n        </Switch>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport Header from \"./components/header\";\nimport reportWebVitals from './reportWebVitals';\nimport { transitions, positions,types, Provider as AlertProvider } from \"react-alert\";\nimport AlertTemplate from \"react-alert-template-basic\";\nimport {BrowserRouter} from \"react-router-dom\"\n\n// optional configuration\nconst options = {\n  // you can also just use 'bottom center'\n  position: positions.TOP_CENTER,\n  timeout: 5000,\n  offset: \"100px\",\n  type: types.SUCCESS,\n  // you can also just use 'scale'\n  transition: transitions.SCALE,\n};\n\nReactDOM.render(\n  <BrowserRouter>\n   <AlertProvider template={AlertTemplate} {...options}>\n      <App />\n      </AlertProvider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n"],"sourceRoot":""}